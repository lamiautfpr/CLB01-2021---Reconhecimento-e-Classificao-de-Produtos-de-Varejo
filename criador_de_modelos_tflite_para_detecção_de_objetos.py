# -*- coding: utf-8 -*-
"""Criador de Modelos TFLite Para Detecção de Objetos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V_fAbqNF2gOzw77muj_QXR3KrBhxOWOv

#Pacotes e Imports
"""

!pip install tflite-model-maker
!pip install pycocotools

import numpy as np
import os

from tflite_model_maker.config import QuantizationConfig
from tflite_model_maker.config import ExportFormat
from tflite_model_maker import model_spec
from tflite_model_maker import object_detector

import tensorflow as tf
assert tf.__version__.startswith('2')

tf.get_logger().setLevel('ERROR')
from absl import logging
logging.set_verbosity(logging.ERROR)

"""#Configurações do Modelo

Performance de cada modelo EfficientDet-Lite.

| Model architecture | Size(MB)* | Latency(ms)** | Average Precision*** |
|--------------------|-----------|---------------|----------------------|
| EfficientDet-Lite0 | 4.4       | 37            | 25.69%               |
| EfficientDet-Lite1 | 5.8       | 49            | 30.55%               |
| EfficientDet-Lite2 | 7.2       | 69            | 33.97%               |
| EfficientDet-Lite3 | 11.4      | 116           | 37.70%               |
| EfficientDet-Lite4 | 19.9      | 260           | 41.96%               |
"""

spec = model_spec.get('efficientdet_lite1')

train_data = object_detector.DataLoader('',size=0,labelmap={});
validation_data = object_detector.DataLoader('',size=0,labelmap={});
test_data = object_detector.DataLoader('',size=0,labelmap={});

"""#Treinar Modelo"""

model = object_detector.create(train_data, model_spec=spec, batch_size=8, train_whole_model=True, validation_data=validation_data)

model.evaluate(test_data)

model.export(export_dir='.', export_format=[ExportFormat.SAVED_MODEL, ExportFormat.LABEL])